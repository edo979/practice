---
import Layout from '../../layouts/MainLayout.astro'

type ActionData = {
  formError?: string
  fieldErrors?: {
    name?: string
    price?: string
  }
  fields?: {
    name: string
    price: string
  }
}

const errors: ActionData = {}

const validateProductName = (name: string) => {
  if (name.length < 3) return 'Name is to Short!'
}
const validateProductPrice = (price: string) => {
  if (Number.isNaN(parseFloat(price)))
    return 'Please enter valid price in this format 34.44'
  if (parseFloat(price) <= 0) return 'Add valid price!'
}

if (Astro.request.method === 'POST') {
  try {
    const fomData = await Astro.request.formData()
    const name = fomData.get('name')
    const price = fomData.get('price')

    if (typeof name !== 'string' || typeof price !== 'string') throw new Error()

    const fieldErrors = {
      name: validateProductName(name),
      price: validateProductPrice(price),
    }
    const fields = {
      name,
      price,
    }

    if (Object.values(fieldErrors).some(Boolean)) {
      errors.fieldErrors = fieldErrors
      errors.fields = fields
      throw new Error()
    }
    //TODO:
    // save product to firestore
    Astro.redirect('/products')
  } catch (error) {
    errors.formError = 'Error when submiting the form!'
  }
}
---

<Layout>
  <h1>Add a new friend</h1>
  <form method="POST" class="space-y-2 w-56 mx-auto">
    {errors?.formError && <p class="text-rose-600">{errors.formError}</p>}
    <label for="name" class="form-label">Name</label>
    <input
      type="text"
      class:list={[
        'form-input',
        { 'border-rose-600 text-rose-600': errors?.fieldErrors?.name },
      ]}
      id="name"
      name="name"
      placeholder="Product name"
      value={errors?.fields?.name}
    />
    <label for="price" class="form-label">Price</label>
    <input
      type="number"
      id="price"
      class:list={[
        'form-input',
        { 'border-rose-600 text-rose-600': errors?.fieldErrors?.price },
      ]}
      name="price"
      placeholder="34.45"
      step="0.01"
      min="0.01"
      value={errors?.fields?.price || '0.00'}
    />
    {
      errors?.fieldErrors?.price && (
        <p class="text-rose-600">{errors.fieldErrors.price}</p>
      )
    }
    <button type="submit" class="btn btn-primary">Add product</button>
  </form>
</Layout>
