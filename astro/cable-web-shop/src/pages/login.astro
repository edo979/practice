---
import { app } from '../firebase/server'
import { getAuth } from 'firebase-admin/auth'
import Layout from '../layouts/MainLayout.astro'

/* Check if the user is authenticated */
const auth = getAuth(app)
const sessionCookie = Astro.cookies.get('session').value
if (sessionCookie) {
  try {
    await auth.verifySessionCookie(sessionCookie)
    return Astro.redirect('/dashboard')
  } catch (error) {}
}
---

<Layout title="Sign in">
  <h1 class="my-16 text-3xl text-center">Sign in</h1>

  <form
    action="/api/auth/login"
    method="post"
    class="max-w-md mx-auto text-lg flex flex-col gap-4"
  >
    <label for="email" for="email" class="">Email:</label>
    <input
      type="email"
      name="email"
      id="email"
      class="py-1.5 px-3 rounded border border-primary"
    />
    <label for="password">Password:</label>
    <input
      type="password"
      name="password"
      id="password"
      class="py-1.5 px-3 rounded border border-primary"
    />
    <button type="submit" class="btn btn-primary">Login</button>
  </form>
</Layout>

<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
    connectAuthEmulator,
  } from 'firebase/auth'
  import { app } from '../firebase/client'

  const auth = getAuth(app)
  connectAuthEmulator(auth, 'http://127.0.0.1:9099')
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence)

  const form = document.querySelector('form') as HTMLFormElement
  form.addEventListener('submit', async (e) => {
    e.preventDefault()
    const formData = new FormData(form)
    const email = formData.get('email')?.toString()
    const password = formData.get('password')?.toString()

    if (!email || !password) {
      return
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    )
    const idToken = await userCredential.user.getIdToken()
    const response = await fetch('/api/auth/login', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    })

    if (response.redirected) {
      window.location.assign(response.url)
    }
  })
</script>
